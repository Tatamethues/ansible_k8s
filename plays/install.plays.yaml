- name: Runtimes
  hosts: all
  become: true
  tasks:
#     ########################################################################
#     ############                 Centos/ Rocky               ###############
#     ########################################################################
#     # - name: Install yum-tuils
#     #   ansible.builtin.dnf:
#     #     name: yum-utils

#     # - name: Add yum repo
#     #   ansible.builtin.command: yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
#     #   changed_when: false

#     # - name: Install Containerd.io
#     #   ansible.builtin.yum:
#     #     name: containerd.io
#     #     state: present

    ########################################################################
    ############                 Ubuntu                      ###############
    ########################################################################
    - name: Install required dependences
      ansible.builtin.apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - apt-transport-https
          - gpg
        state: present

    - name: Add Docker key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        keyring: /etc/apt/keyrings/docker.gpg
        state: present

    - name: Add Docker repo
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu jammy stable"
        state: present

    - name: Install containerd.io
      ansible.builtin.apt:
        name: containerd.io
        state: present
        update_cache: true

    - name: Write containerd default config
      ansible.builtin.shell: containerd config default > /etc/containerd/config.toml
      changed_when: false

    - name: Configure systemd cgroup driver
      ansible.builtin.replace:
        path: /etc/containerd/config.toml
        regexp: SystemdCgroup = false
        replace: SystemdCgroup = true

    - name: Restart containerd service
      ansible.builtin.systemd_service:
        state: restarted
        enabled: true
        name: containerd

    - name: Add system modules
      ansible.builtin.copy:
        content: |
          overlay
          br_netfilter
        dest: /etc/modules-load.d/k8s.conf
        mode: preserve

    - name: Bridged traffic
      ansible.builtin.copy:
        content: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward                 = 1
        dest: /etc/sysctl.d/k8s.conf
        mode: preserve

    - name: Enable overlay
      ansible.builtin.command: modprobe overlay
      changed_when: false

    - name: Enable br_netfilter
      ansible.builtin.command: modprobe br_netfilter
      changed_when: false

    - name: Apply changes
      ansible.builtin.command: sysctl --system
      changed_when: false

- name: Install K8S
  hosts: all
  become: true
  tasks:
    ########################################################################
    ############                 Centos/ Rocky               ###############
    ########################################################################
    # - name: Set SELinux to permissive mode
    #   ansible.builtin.shell: setenforce 0 && sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config
    #   changed_when: false

    # - name: Add kubernetes yum repo
    #   ansible.builtin.yum_repository:
    #     name: kubernetes
    #     description: Kubernetes
    #     baseurl: https://pkgs.k8s.io/core:/stable:/v1.28/rpm/
    #     enabled: true
    #     gpgcheck: true
    #     gpgkey: https://pkgs.k8s.io/core:/stable:/v1.28/rpm/repodata/repomd.xml.key
    #     exclude: kubelet kubeadm kubectl cri-tools kubernetes-cni
    # - name: Install kubelet kubeadm kubectl
    #   ansible.builtin.yum:
    #     name:
    #       - kubelet
    #       - kubeadm
    #       - kubectl
    #     disable_excludes: kubernetes
    #     state: present

    ########################################################################
    ############                 Ubuntu                      ###############
    ########################################################################
    - name: Add Docker key
      ansible.builtin.apt_key:
        url: https://pkgs.k8s.io/core:/stable:/v1.27/deb/Release.key
        keyring: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        state: present

    - name: Add Docker repo
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /"
        state: present

    - name: Install kubelet kubeadm kubectl
      ansible.builtin.apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present

    - name: Mark kubelet kubeadm kubectl
      ansible.builtin.dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop:
        - kubelet
        - kubeadm
        - kubectl

    - name: Enable kubelet
      ansible.builtin.systemd_service:
        name: kubelet
        enabled: true
        state: restarted
